<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Universe OpenAstronomy (Posts by Mihirtripathi)</title><link>http://openastronomy.org/Universe_OA/</link><description></description><atom:link href="http://openastronomy.org/Universe_OA/authors/mihirtripathi.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Thu, 24 Oct 2024 01:12:49 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>GSoC@Stingray: Final dash! blog#4</title><link>http://openastronomy.org/Universe_OA/posts/2022/09/20220912_1708_mihirtripathi97/</link><dc:creator>Mihirtripathi</dc:creator><description>&lt;p&gt;Hey everyone,&lt;/p&gt;
&lt;p&gt;It is the end of the coding period of GSoC”22. This is going to be my last blog about my project.&lt;/p&gt;
&lt;p&gt;After successfully implementing the bexvar method in Stingray (this &lt;a href="https://github.com/StingraySoftware/stingray/pull/664"&gt;PR&lt;/a&gt;). I and my mentors decided that we can now work to add bexvar as a method to Stingra’s Lightcurve class. This was not a part of my original proposal. The bexvar() method takes lightcurve data in input parameters, so it made sense to provide this facility to users. Stingray’s Lightcurve class facilitates users to create Lightcurve objects and perform several operations useful for time series analysis on them.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;The Lightcurve object is created by providing two arrays ( time and counts) as input parameters. Along with these it also has several other optional parameters specifying relevant lightcurve data. Most of these parameters are also attributes of the Lightcurve class. We knew that the Lightcurve class does not have parameters like frac_exp (fractional exposer in each bin),bg_counts (background counts in each bin) and bg_ratio (background ratio in each bin) which are optional parameters of bexvar(). So to add bexvar() a method to theLightcurve class, we also included these parameters in theLightcurve class and declared them as its attributes. I started the work with this &lt;a href="https://github.com/StingraySoftware/stingray/pull/669"&gt;PR&lt;/a&gt;. However, just adding these parameters was not enough. The Lightcurve class provides some important filtering and sorting methods for Lightcurve objects. These methods did not support these optional parameters as they weren't there initially. It wouldn’t be so great if users create a Lightcurve object with all these parameters, then they may want to truncate the lightcurve or sort it or apply GTIs (Good time intervals) before calling bexvar() and the returned Lightcurve does not have these attributes. We worked on providing support for these new parameters in some of these methods.&lt;/p&gt;
&lt;p&gt;In addition to that, the bexvar() method works on the light curves with uneven sampling. Which led us to also investigate if Stingray supports the creation of such lightcurve objects. We found that the support was not very great for such data. While there was no restriction for creating a Lightcurve class with the time resolution parameter dt being an array, many methods of the Lightcurve class did not extend support for such data. We started working on providing this support after that. This led to some serious bug fixing and restless nights but finally, we were able to reach at a point where all of the existing tests are passing.&lt;/p&gt;
&lt;p&gt;Apart from this, I also created a jupiter notebook for a tutorial on the bexvar()method (see this &lt;a href="https://github.com/StingraySoftware/notebooks/pull/58"&gt;PR&lt;/a&gt;). This contains examples showcasing how to use the implemented method and also a section on the theoretical explanation of bexvar. This notebook will also be upgraded with examples of how to call bexvar() method implemented in the Lightcurve class once that work is completed.&lt;/p&gt;
&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/680/1*YFXjL3Wc5EqBE9vaXPHNBQ.jpeg"&gt;&lt;/figure&gt;&lt;p&gt;With this final blog, my journey through &lt;a href="https://summerofcode.withgoogle.com/"&gt;GSoC”22&lt;/a&gt; comes to a happy end. You can check out my final report for this project containing rigorous details at this &lt;a href="https://mihirtripathi97.github.io/GSoC-22/"&gt;webpage&lt;/a&gt;. I will continue working with Stingray, I will continue contributing to OpenAstrnomy and other open source projects as well. I must say that GSoC has been really great it provided me the best opportunity for the beginning of my journey in the open source community. I would like to thank the &lt;a href="https://openastronomy.org/"&gt;OpenAstronomy&lt;/a&gt; organization for giving me this wonderful opportunity to contribute to open source projects for the Astrophysics community. This means a lot to me as I am one of the users of several projects of the member organizations.&lt;/p&gt;
&lt;p&gt;I would like to thank both my mentors &lt;a href="https://github.com/matteobachetti"&gt;Matteo Bachetti&lt;/a&gt; and &lt;a href="https://github.com/dhuppenkothen"&gt;Daniela Huppenkothen&lt;/a&gt; for being extremely generous, supportive, and motivating mentors. I am truly grateful to have you both as my mentors.&lt;/p&gt;
&lt;img alt="" height="1" src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=1279d3b337e7" width="1"&gt;</description><category>stingray</category><guid>http://openastronomy.org/Universe_OA/posts/2022/09/20220912_1708_mihirtripathi97/</guid><pubDate>Mon, 12 Sep 2022 16:08:26 GMT</pubDate></item><item><title>GSoC @ Stingray: Testing Testing Testing …</title><link>http://openastronomy.org/Universe_OA/posts/2022/08/20220826_1631_mihirtripathi97/</link><dc:creator>Mihirtripathi</dc:creator><description>&lt;h4&gt;GSoC @ Stingray: Testing Testing Testing …&lt;/h4&gt;&lt;p&gt;After getting the code for bexvar in working condition, the next task in front of me was to test the code. As I mentioned in the last blog I was completely new to software testing. This meant a lot of new things to learn.&lt;/p&gt;
&lt;p&gt;In this blog, I am going to write about my experience with testing. This was one of the best learning experiences of my GSoC journey so far. With the help of my mentors, I arrived at the conclusion that primarily there are three kinds of tests that would be needed for bexvar.&lt;/p&gt;
&lt;p&gt;(1) Unit tests to check if various components of my code provide the correct outputs individually.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;(2) Some functional tests to check if the entire bexvar() function works properly and gives the desired output.&lt;/p&gt;
&lt;p&gt;(3) Some other tests to check if proper warnings and errors are raised in the case of bad inputs.&lt;/p&gt;
&lt;p&gt;I started with the unit tests. Creating the unit tests for internal functions was comparatively easy. Two of the three internal functions provided deterministic outputs. All that was needed for testing them was to calculate the desired output and compare it with the output from the code.&lt;/p&gt;
&lt;p&gt;One of the major problems arose while designing functional tests. The bexvar() function returns an array that contains the samples of the log of the bexvar (i.e. log(\sigma_{count rate})). These samples are proportional to the posterior distribution of log(\sigma_\{count rate}). These samples are generated by an MCMC generator and therefore the elements and the number of elements of the output array are different after each run for the same data. This makes testing the result more difficult as the elements of the array could not be compared with a predetermined result.&lt;/p&gt;
&lt;p&gt;As the bexvar() aims to provide the posterior distribution of log(Sigma_\{count rate}) the elements as individuals do not matter but the shape of their histogram provides the posterior distribution. Therefore we decided to test the results with some statistical parameters derived from the generated samples which quantify the distribution.&lt;/p&gt;
&lt;p&gt;The problems that I faced while designing the third type of test, helped me find and resolve multiple unseen issues with the code. It took me more time than I expected to complete the testing phase. However, I am glad to announce that the all tests are now passing successfully. Additionally, I also passed the mid-term evaluations! Phew!&lt;/p&gt;
&lt;p&gt;At end of the testing phase, The &lt;a href="https://github.com/StingraySoftware/stingray/pull/664"&gt;PR&lt;/a&gt; was ready to be merged, after a few minor updates in the docstrings it was merged! Yaay! The work is not yet done though. Next, I am working to add a method to Stingray’s lightcurve class. In addition to this, I will be creating a tutorial page for using the bexvar and will also make some more improvements in the code if time permits.&lt;/p&gt;
&lt;img alt="" height="1" src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=9d1572ac43ef" width="1"&gt;</description><category>stingray</category><guid>http://openastronomy.org/Universe_OA/posts/2022/08/20220826_1631_mihirtripathi97/</guid><pubDate>Fri, 26 Aug 2022 15:31:33 GMT</pubDate></item><item><title>GSoC @ Stingray: Diving into coding period. blog #2</title><link>http://openastronomy.org/Universe_OA/posts/2022/07/20220724_1811_mihirtripathi97/</link><dc:creator>Mihirtripathi</dc:creator><description>&lt;p&gt;Hey there!&lt;/p&gt;
&lt;p&gt;It is time to write a blog about my experience in the coding period so far. So here it goes.&lt;/p&gt;
&lt;p&gt;The official coding period for GSoC’22 started on the 13th of June. After discussing with mentors I decided that the first task would be to create a base structure of the code for Bexvar. As the method was already implemented by Dr. Johannes Buchner (who also suggested implementing this method in Stingray)and David Bogensberger, we decided to use this &lt;a href="https://github.com/JohannesBuchner/bexvar"&gt;implementation&lt;/a&gt; as a reference.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;I spent the first 2–3 days planning the structure of the code and planning its implementation in Stingray’s code base. At first, the implementation seemed easy. Although as I explored more and discussed my ideas with my mentors I realized that there are many small but important changes that need to be made.&lt;/p&gt;
&lt;p&gt;In addition to these, I realized that I had to set up a proper environment on my computer to write, edit and test the codes that I write. I decided to use &lt;a href="https://code.visualstudio.com/"&gt;Visual Studio Code&lt;/a&gt; (VS Code) for it. Before the contribution period, I had only a little familiarity with Github and had never used git in my local system. I somehow made it through the contribution period without installing it. Now since I had an open source project at hand which will require frequent commits, I decided to install git and GitHub desktop on my computer and learn to use git with CLI. I found out that along with many useful tools for professional programming, VS Code also provided support to use git inside from the editor, this seemed quite useful for my purpose. I learned how to install and work with multiple versions of Python. I learned how to set up a Python virtual environment and use it to test codes in a controlled environment. I had to go through multiple iterations of installing, uninstalling, and then reinstalling several packages to set everything perfectly. This made me a bit irritated but later on, I realized that this helped me save a lot of time while coding for the project.&lt;/p&gt;
&lt;p&gt;After going through a few iterations the base code was ready and working. It still needed some improvements and structural changes. It had a core function that reads the light curve data from an AstroPy table. After that, it would call internal functions successively to finally obtain the Bayesian Excess Variance of count rate. My mentor Prof. Matteo suggested that I start a PR with this version of the code. As I made this &lt;a href="https://github.com/StingraySoftware/stingray/pull/664"&gt;PR&lt;/a&gt;, we started discussing how to improve the code.&lt;/p&gt;
&lt;p&gt;My mentors pointed out that my core function &lt;em&gt;bexvar()&lt;/em&gt; needed further modularization. We decided to separate it into two functions, A core function &lt;em&gt;bexvar()&lt;/em&gt; which will accept light curve data as a set of NumPy arrays or lists and calculate bexvar, and a &lt;em&gt;bexvar_from_table()&lt;/em&gt; function which can read light curve data from an AstroPy table and call &lt;em&gt;bexvar()&lt;/em&gt;. This change made the core &lt;em&gt;bexvar()&lt;/em&gt; function more general as now users would not need to have light curve data in form of an AstroPy Table object to obtain bexvar. Also, in the future, we can create a function like &lt;em&gt;bexvar_from_table()&lt;/em&gt; which can read data from Stingray’s Lightcurve object and call &lt;em&gt;bexvar()&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;In the next phase, I updated existing docstrings, added docstrings where it was missing, and worked on code formating. At this stage, the code was still failing in Stingray’s CI tests. The reason behind the failures was that the code uses an integrator &lt;a href="https://johannesbuchner.github.io/UltraNest/_modules/ultranest/integrator.html#ReactiveNestedSampler"&gt;&lt;strong&gt;ReactiveNestedSampler&lt;/strong&gt;&lt;/a&gt; from &lt;a href="https://arxiv.org/abs/2101.09604"&gt;UltraNest — a robust, general purpose Bayesian inference engine&lt;/a&gt;. UltraNest is not a required dependency for Stingray, hence CI tests were failing with import error. To resolve this, the import statement of UltraNest in bexvar.py needed to be moved inside a try-except statement. This would restrict the user from using bexvar.py if UltraNest is not installed. With this change, the code has passed the majority of CI tests.&lt;/p&gt;
&lt;p&gt;The overall experience of the coding period so far has been good. During this period I learned a lot about the essentials of open-source programming. I am learning to think like a programmer. I learned how small improvements in code make it more general and versatile. I learned about the best practices to write code. I must say that all this time my mentors Matteo and Daniela have been quite supportive and helpful. They have patiently listened to my queries and doubts and have always helped me with them.&lt;/p&gt;
&lt;p&gt;My code is running perfectly now, from this week onwards I will be focussing on writing tests for the code. Writing tests for a code is a completely new experience for me. I am looking forward to learn a lot about professional code testing in the following weeks. I will soon be back with a blog on my experience with testing. Till then take care! Goodbye!&lt;/p&gt;
&lt;img alt="" height="1" src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=f24a03c00014" width="1"&gt;</description><category>stingray</category><guid>http://openastronomy.org/Universe_OA/posts/2022/07/20220724_1811_mihirtripathi97/</guid><pubDate>Sun, 24 Jul 2022 17:11:57 GMT</pubDate></item><item><title>GSoC @ Stingray: Begining of the journey. blog #1</title><link>http://openastronomy.org/Universe_OA/posts/2022/07/20220704_0357_mihirtripathi97/</link><dc:creator>Mihirtripathi</dc:creator><description>&lt;p&gt;Hey there! It has been about 15 days since I had written my last blog. It is time for the next one. In this blog, I will write about my experience in GSoC so far. I want to tell you about how I selected my project, how I prepared my project proposal, and what did I do after getting selected.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How did I select the organization?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;So, let’s start from the beginning! I started considering to apply in GSoC in late February. I first came to know about GSoC just a few months back. My knowledge about GSoC and open-source was quite limited. One of the first things that I did was to go through the &lt;a href="https://summerofcode.withgoogle.com/"&gt;GSoC website&lt;/a&gt; and learn more about the program. Being a beginner in the open-source community and also coming from a non-CS background I had no idea which organizations take part in GSoC and which of them would be most suitable for me. At this time, the mentoring organizations for GSoC”22 were not announced. I decided to check out mentoring organizations from past programs to get an idea. I wanted to work on a project that involve Physics or Astrophysics, and to my surprise, several such organizations did take part in previous programs.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;From this search, I got to know about &lt;a href="https://openastronomy.org/"&gt;OpenAstronomy&lt;/a&gt;. It is an umbrella organization of several open-source astronomy and astrophysics projects. From their &lt;a href="https://openastronomy.org/gsoc/"&gt;GSoC webpage&lt;/a&gt;, I came to know that they are applying to participate in GSoC”22. The webpage also contained guidelines for contributors, a list of project ideas for this year and for past years, and information about how to get in touch with mentors and communities of various member organizations. All these were quite informative and useful. I also checked out several other organizations as well. All of them had such information available online in various forms. A few days later the participating organizations were announced by GSoC and OpenAstronomy was one of them. By this time, as directed in contributor guidelines of both &lt;a href="https://google.github.io/gsocguides/student/"&gt;GSoC&lt;/a&gt; and &lt;a href="https://openastronomy.org/gsoc/student_guidelines.html"&gt;OpenAstronomy&lt;/a&gt;, I had introduced myself in chat channels and mailing lists of some organizations. I went through various project ideas proposed by these organizations and tried to find a project that aligned most with my interests. Being an astronomer, I wanted to work on an OpenAstronomy project and from the list of project ideas I liked the project called ‘Bexvar in Stingray’. So I decided to prepare a proposal for this project.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;About the project&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Let me tell you in brief about &lt;a href="https://docs.stingray.science/index.html"&gt;Stingray&lt;/a&gt; and ‘Bexvar’ first. Stingray is an open-source package for x-ray spectral timing written in python. It provides a number of tools to perform times series analysis and related tasks on astronomical light curves. In the case of faint x-ray sources, observed near the detection limits of telescopes, uncertainties in their light curves are dominated by Poissonian uncertainties. The Bayesian excess variance (Bexvar) method is useful to find variability intrinsic to sources from gappy light curves dominated by Poissonian uncertainties. It was developed by &lt;a href="https://arxiv.org/abs/2106.14529"&gt;Buchner et al. (2021)&lt;/a&gt;. The aim of the ‘Bexvar in Stingray’ project is to implement this method in Stingray, create test cases for the method based on real observational data and write appropriate documentation. I will write about the project in more detail in my next blog.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How did I make the proposal?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;When I read about the project, my first instinct was to read the article by &lt;a href="https://arxiv.org/abs/2106.14529"&gt;Buchner et al. (2021)&lt;/a&gt; to know more about the method. After reading it I was convinced that I do want to work on implementing this method in Stingray. I started by introducing myself to the Stingray community through their slack channel. As per the &lt;a href="https://openastronomy.org/gsoc/student_guidelines.html"&gt;guideline&lt;/a&gt; by OpenAstronmy, one of the first things to do then was to make a PR in Stingray for the contribution period. For this, I went to the &lt;a href="https://github.com/StingraySoftware/stingray"&gt;GitHub repository&lt;/a&gt; of the core Stingray package. I went through the list of open issues and found issues labeled ‘good first issue’ and ‘GSoC’. I selected an issue that I thought was closely related to my project. The &lt;a href="https://github.com/StingraySoftware/stingray/issues/592"&gt;issue&lt;/a&gt; was about a bug in the CrossCorrelation class in stingray. The CrossCorrelation class of stingray has an internal method called time_shift. This provided the timeshift required between two lightcurves to get maximum cross-correlation between them. It was found that if two identical lightcurves are used then, the time_shift method should give zero as the answer irrespective of the length of the lightcurve. As the light curve will have maximum crosscorrelation with itself. However, the method did not give zero as an answer in the case of the light curve having an even number of time bins. I tried to solve this issue by changing how time_shift was calculated in the code. During this time I interacted with Prof. Matteo Bachetti, who is one of the mentors for the project. Before applying for GSoC, I had negligible experience in contributing to open-source. Matteo guided me a lot during this phase and finally, my &lt;a href="https://github.com/StingraySoftware/stingray/pull/647"&gt;PR&lt;/a&gt; was merged. To be honest this made me very happy! It was the first time when I actually made some contributions to open-source software. The next task was to prepare a proposal for the project. This was a long and tough process. I spent most of my time reading about the Bexvar method, trying to understand it, and figuring out how to write a proposal for its implementation. During this time I sent my draft proposals to Matteo, he guided me to make them better, I worked on his suggestion. This interaction also gave me a lot of insight into what is expected from a contributor. This entire experience of preparing a proposal for the project and taking suggestions from mentors was quite new to me, and I am really grateful that I had a chance to go through it.&lt;/p&gt;
&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/680/1*YFXjL3Wc5EqBE9vaXPHNBQ.jpeg"&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;Community bonding period&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;After a month of submitting a proposal, the selected proposals were announced. To my surprise, my proposal was selected. I was over the moon, I was happy, I was excited and also a little bit worried. With the selection, the three-week-long community bonding period started. This period is dedicated for selected contributors to bond with community members, and mentors, interact with them and get themselves familiar with the codebase. This acts as a warm-up period before the actual coding period starts. The first important thing that happened during this period was the project kickoff meeting with my mentors Matteo and Daniela. This was the first time when I virtually met both of them. We discussed a bit about the project, our background, and current work, our expectations from each other, etc. We decided to meet every week virtually and stay in contact during the week via slack. This was a truly nice experience for me, both of them are quite supportive, they explained things to me nicely and most importantly made me feel welcome in the community and made sure that I was comfortable. In the following weeks, I spent my time studying the implementation of &lt;a href="https://github.com/JohannesBuchner/bexvar"&gt;Bexvar&lt;/a&gt; by Buchner et al. (2021), learning about Bayesian statistics, and also understanding Stingray’s code base. I also learned more about testing in python and by the end of the community bonding period, I was ready to start coding. I planned to get a basic model of the method ready in the first few weeks after the community bonding period. Overall the community bonding period was great, It really helped me get into the right mindset for the coding period and be prepared for it. I learned a lot about Stingray, Bayesian statistics, and my project during this time.&lt;/p&gt;
&lt;p&gt;A lot more is yet to be covered. Right now I am on the 3 rd week of the coding period. I will soon write about my project and my work in the coding period in detail in my next blog. It is time to wrap this one up for now. See you soon!&lt;/p&gt;
&lt;img alt="" height="1" src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=7ed5a47bec65" width="1"&gt;</description><category>stingray</category><guid>http://openastronomy.org/Universe_OA/posts/2022/07/20220704_0357_mihirtripathi97/</guid><pubDate>Mon, 04 Jul 2022 02:57:22 GMT</pubDate></item><item><title>GSoC @ Stingray blog #0</title><link>http://openastronomy.org/Universe_OA/posts/2022/06/20220616_0650_mihirtripathi97/</link><dc:creator>Mihirtripathi</dc:creator><description>&lt;p&gt;Hey there, welcome to this blog. My name is Mihir and I am a contributor for &lt;strong&gt;Google Summer of Code 2022&lt;/strong&gt;. This blog is the first in a series of blogs where I will write about my journey through the GSoC working for &lt;a href="https://stingray.science/"&gt;&lt;strong&gt;Stingray&lt;/strong&gt;&lt;/a&gt; under the umbrella organization&lt;strong&gt; &lt;/strong&gt;&lt;a href="https://openastronomy.org/"&gt;&lt;strong&gt;OpenAstronomy&lt;/strong&gt;&lt;/a&gt;. During the period of the next 12 weeks or so, I will be working toward implementing the Bayesian Excess Variance method in Stingray with help of my mentors Matteo and Daniela.&lt;/p&gt;
&lt;p&gt;If you are here then you might already know about the Google Summer of Code. If you do not then here is a brief description of it. It is a program, organized and conducted by Google annually. It starts somewhere around the winter equinox and ends sometime around the autumn equinox, i.e. throughout the summer. The program aims to bring new contributors to open-source software development. Of course, you can get more information about it by visiting its &lt;a href="https://summerofcode.withgoogle.com/"&gt;website&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Since this is my first blog, I will keep things simple and just write briefly about myself. By profession, I am a researcher and an educator. I did my post-graduation in Physics from the Tata Institute of Fundamental Research (TIFR), Mumbai. My research work is in the field of Star and exoplanet formation. I study the evolution and dynamics of circumstellar disks that form around young stars. Apart from this, I teach physics to undergrad students. I like to slow travel and sometimes I volunteer as a teacher and an artist. I like to read fiction and watch movies. Currently, I am staying in a small village, located amid the snow-covered mountains of the Himalayas. Here is a picture of myself, taken after a small mountain hike.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/1024/1*EVZL88BNmc_mAz_ViXDw4g.jpeg"&gt;&lt;/figure&gt;&lt;p&gt;I love to code, and I love Astrophysics. There had been multiple moments in my life when I had to choose between Physics and Computer Science, and every time I wished that I can choose both. For my research work, I extensively use open-source packages like Astropy, CASA, etc. This motivated me to contribute to open-source packages for astronomy and give something back to the community. Surprisingly, this year GSoC also relaxed its eligibility criteria for contributors. All of these have brought me this serendipitous point in my life when I have an opportunity to start my journey in open-source, writing code for software used for Astrophysics while participating in a prestigious program like GSoC! So this is like a dream come true for me.&lt;/p&gt;
&lt;p&gt;I think I will wrap up this blog for now! I plan to write about my project ‘Bayesian Excess Variance (Bexvar) in Stingray’ soon in this series. If you want to know a little bit about it now, you can take a look at this &lt;a href="https://summerofcode.withgoogle.com/programs/2022/projects/rG1XqJqK"&gt;webpage&lt;/a&gt;. Till then goodbye :)!&lt;/p&gt;
&lt;img alt="" height="1" src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=bb7ba9c5026c" width="1"&gt;</description><category>stingray</category><guid>http://openastronomy.org/Universe_OA/posts/2022/06/20220616_0650_mihirtripathi97/</guid><pubDate>Thu, 16 Jun 2022 05:50:44 GMT</pubDate></item></channel></rss>