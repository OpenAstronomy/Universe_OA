<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Universe OpenAstronomy (Posts by Abhijeet Manhas)</title><link>http://openastronomy.org/Universe_OA/</link><description></description><atom:link href="http://openastronomy.org/Universe_OA/authors/abhijeet-manhas.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Tue, 13 May 2025 01:59:51 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>GSoC 2020: Thus Ending</title><link>http://openastronomy.org/Universe_OA/posts/2020/08/20200825_2118_abhijeetmanhas/</link><dc:creator>Abhijeet Manhas</dc:creator><description>&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/680/0*NtL-M7ydCU35SOqY.jpg"&gt;&lt;/figure&gt;&lt;p&gt;This post marks the end of the summer of Code with Google. A lot I learned from the community; a lot I contributed to it. What I took back from GSoC is way more than what I put forward for it. So let’s see what I did in the last weeks.&lt;/p&gt;
&lt;p&gt;I have now added a guide on how to Add “Attrs” to the registry in &lt;a href="https://github.com/sunpy/sunpy/pull/4387"&gt;PR #4387&lt;/a&gt;. It is part of the developer guide for Fido.&lt;br&gt;
I have added tests to check metadata queries in &lt;a href="https://github.com/sunpy/sunpy/pull/4385"&gt;#4385&lt;/a&gt; and ways to index the results using the client’s name. It eases to retrieve individual provider responses from a Fido result.&lt;br&gt;
&lt;!-- TEASER_END --&gt;
I resolved all reviews so far on PR &lt;a href="https://github.com/sunpy/sunpy/pull/4419"&gt;#4419&lt;/a&gt;, so now it will ease the merging of &lt;a href="https://github.com/sunpy/sunpy/pull/4321"&gt;PR #4321&lt;/a&gt;.&lt;br&gt;
They await review as of now, maybe merged within this week. In short, almost all the proposed goals were achieved in the project. I experienced a more “pythonic” way of coding. Discovered new heights of the language, learned some solar physics, and what matters most, became part of a great community. Hopefully I made &lt;em&gt;Fido Great Again!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CAPRE NOCTEM!&lt;/strong&gt;&lt;/p&gt;
&lt;img src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=acd30ed987ae" width="1" height="1"&gt;</description><category>SunPy</category><guid>http://openastronomy.org/Universe_OA/posts/2020/08/20200825_2118_abhijeetmanhas/</guid><pubDate>Tue, 25 Aug 2020 20:18:36 GMT</pubDate></item><item><title>GSOC 2020: New additions to old PRs</title><link>http://openastronomy.org/Universe_OA/posts/2020/08/20200811_1829_abhijeetmanhas/</link><dc:creator>Abhijeet Manhas</dc:creator><description>&lt;h4&gt;GSOC 2020: Polishing my code&lt;/h4&gt;&lt;p&gt;I spent last most of the previous two weeks on resolving reviews on my old PRs and improving gallery examples.&lt;/p&gt;
&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/852/0*fsXbXhCmI6jKwUv6.jpg"&gt;&lt;figcaption&gt;Heavy rains begins in Vadodara&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;Knowing time intervals from URL patterns&lt;/h4&gt;&lt;p&gt;I created &lt;a href="https://github.com/sunpy/sunpy/pull/4419"&gt;PR #4419&lt;/a&gt; that allows getting file time-ranges from the URL using the scraper. The URL patterns from most of the archives have start time in them. Either the end time was usually hardcoded for all clients or we only used start time to validate the file URLs against a time interval.&lt;/p&gt;
&lt;p&gt;In my Clients Generalization, to escape this repetitiveness the code in post_search_hook() was somewhat less generalized. It was assumed that all files are day-long. Thus I generalized it and moved it to the scraper. From the base URL pattern, we can now the precision of time supported by the archive directories, and then using them we can find the end times. Say there are yearly files in an archive. Then we can default the end time to the end of that year. Moreover, if this time range overlaps with the searched time interval, the file is valid. We check it using _check_timerange().&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;h4&gt;Removed optional from class attributes&lt;/h4&gt;&lt;p&gt;We now need to register all ‘attrs’ supported by the client in PR #4321. This helped me to escape from defining optional attrs. We use register_values() only to know whether the client can serve the query or not.&lt;/p&gt;
&lt;h4&gt;Fido metadata queries Gallery Example&lt;/h4&gt;&lt;p&gt;I have added a new gallery example in &lt;a href="https://github.com/sunpy/sunpy/pull/4358"&gt;PR #4358&lt;/a&gt; which summarizes what we can do after the pull request is merged. We can make metadata queries and easily inspect them. A lot of minor improvements were also made in the PR.&lt;/p&gt;
&lt;iframe src="http://openastronomy.org/Universe_OA/posts/2020/08/20200811_1829_abhijeetmanhas/" width="0" height="0" frameborder="0" scrolling="no"&gt;&lt;a href="https://medium.com/media/0e1004e2649bfd262dda2f4e37fed4a8/href"&gt;https://medium.com/media/0e1004e2649bfd262dda2f4e37fed4a8/href&lt;/a&gt;&lt;/iframe&gt;&lt;h4&gt;Extracting client responses from Fido result&lt;/h4&gt;&lt;p&gt;Earlier we have to specify index as an argument to get_response() to do that. It required us to count the records to find the correct index. Now we can easily use the name of the client to retrieve QueryResponse instances for that client. If there are multiple such records, then a list of all matching records will be returned.&lt;/p&gt;
&lt;h4&gt;ToDos for the final two weeks&lt;/h4&gt;&lt;p&gt;I have to document how to write Fido clients and add tests to the Fido metadata compatibility. Let’s see what other issues I can tackle in these pull requests.&lt;/p&gt;
&lt;p&gt;Till then,&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CAPRE NOCTEM!&lt;/strong&gt;&lt;/p&gt;
&lt;img src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=c2d1683fe428" width="1" height="1"&gt;</description><category>SunPy</category><guid>http://openastronomy.org/Universe_OA/posts/2020/08/20200811_1829_abhijeetmanhas/</guid><pubDate>Tue, 11 Aug 2020 17:29:54 GMT</pubDate></item><item><title>GSOC 2020: Metadata searches using Fido</title><link>http://openastronomy.org/Universe_OA/posts/2020/07/20200728_1816_abhijeetmanhas/</link><dc:creator>Abhijeet Manhas</dc:creator><description>&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/816/0*hF5ggLHngI8p-yaa"&gt;&lt;figcaption&gt;Missed Comet NEOWISE due to annoying cloud cover in Vadodara straight for 2 weeks :(&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;And that’s the central theme of the project :)&lt;/p&gt;
&lt;p&gt;It would now be possible to query clients that return metadata tables using Fido. So SunPy’s &lt;strong&gt;Fido&lt;/strong&gt; is a unified interface that allows searching and downloading solar physics data. In other words, it is a consistent and easy way to query most forms of solar physics data. It searches various archives and web services based on search attributes specified in the query.&lt;/p&gt;
&lt;p&gt;SunPy currently supports metadata facilities viz., JSOC Client, HEK Client, and Helio Client.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;SunPy’s hek module is used to access the information in the &lt;strong&gt;Heliophysics Event Knowledgebase&lt;/strong&gt; (HEK). HEK helps solar and heliospheric researchers locate features and events of interest.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Joint Science Operations Center&lt;/strong&gt; (JSOC) supports data products from various observatories and solar physics instruments.&lt;/p&gt;
&lt;p&gt;But they were not Fido compatible for metadata searches. PR #4358 addresses it.&lt;/p&gt;
&lt;h4&gt;Generic Class for metadata clients&lt;/h4&gt;&lt;p&gt;Since a lot of methods were similar in these clients, so I made a new superclass for them. JSOC, Helio, and HEK responses now inherit BaseQueryResponseTable to ease inspecting data retrieved through their clients. The idea was to retain the old look of response tables and also support a method to show all columns if required.&lt;/p&gt;
&lt;iframe src="http://openastronomy.org/Universe_OA/posts/2020/07/20200728_1816_abhijeetmanhas/" width="0" height="0" frameborder="0" scrolling="no"&gt;&lt;a href="https://medium.com/media/abb67aed8bc120d39e874af9ef9ab599/href"&gt;https://medium.com/media/abb67aed8bc120d39e874af9ef9ab599/href&lt;/a&gt;&lt;/iframe&gt;&lt;h4&gt;Deprecations&lt;/h4&gt;&lt;p&gt;~sunpy.net.hek.attrs.Time is deprecated since we can now use ~sunpy.net.attrs.Time for HEK queries, making it redundant.&lt;/p&gt;
&lt;p&gt;I also deprecated ~sunpy.net.jsoc.attrs.Keys because now the response table contains all keys by default. Users can specify the column names as *args in :meth:~sunpy.net.hek.HEKResponse.show for getting an ~astropy.table.Table instance containing only those columns.&lt;/p&gt;
&lt;iframe src="http://openastronomy.org/Universe_OA/posts/2020/07/20200728_1816_abhijeetmanhas/" width="0" height="0" frameborder="0" scrolling="no"&gt;&lt;a href="https://medium.com/media/d663f6878e23ecc59cd3f0b7cce932ef/href"&gt;https://medium.com/media/d663f6878e23ecc59cd3f0b7cce932ef/href&lt;/a&gt;&lt;/iframe&gt;&lt;p&gt;Finally, HEKTable was renamed to HEKResponse for consistency in naming.&lt;/p&gt;
&lt;h4&gt;Devguide for writing Fido Clients&lt;/h4&gt;&lt;p&gt;I have explained how to write a simple Fido client in &lt;a href="https://github.com/sunpy/sunpy/pull/4387"&gt;PR 4387&lt;/a&gt;. This was the first documentation pull request that I made in SunPy. Work is in progress for adding details of writing an “AttrWalker” and registring an “Attr” for Fido.&lt;/p&gt;
&lt;iframe src="http://openastronomy.org/Universe_OA/posts/2020/07/20200728_1816_abhijeetmanhas/" width="0" height="0" frameborder="0" scrolling="no"&gt;&lt;a href="https://medium.com/media/449c51d6f6528dbb0a236344fe4a9524/href"&gt;https://medium.com/media/449c51d6f6528dbb0a236344fe4a9524/href&lt;/a&gt;&lt;/iframe&gt;&lt;h4&gt;Other Stuff&lt;/h4&gt;&lt;p&gt;I reviewed&lt;a href="https://github.com/sunpy/sunpy/pull/4394"&gt; PR #4394&lt;/a&gt;, which allows XRSClient to download reprocessed data for GOES Satellites. I also need to add support for this new pattern in my &lt;a href="https://github.com/sunpy/sunpy/pull/4321"&gt;dataretriever refactoring pull request, #4321&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I also go through the discussions present in the net issues so I can fit their fixes in my project. I also suggest updates to the description of outdated issues and check if they still persist, like in &lt;a href="https://github.com/sunpy/sunpy/issues/2401"&gt;Issue #2401&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/sunpy/sunpy/issues/2032"&gt;Issue #2032&lt;/a&gt; was fixed, so now helio wsdl_retriever returns the first valid taverna link.&lt;/p&gt;
&lt;p&gt;We are going to now enter the last phase of the work period!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CARPE NOCTEM!&lt;/strong&gt;&lt;/p&gt;
&lt;img src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=909bda98b771" width="1" height="1"&gt;</description><category>SunPy</category><guid>http://openastronomy.org/Universe_OA/posts/2020/07/20200728_1816_abhijeetmanhas/</guid><pubDate>Tue, 28 Jul 2020 17:16:19 GMT</pubDate></item><item><title>GSOC 2020: End of the First Half</title><link>http://openastronomy.org/Universe_OA/posts/2020/07/20200714_2212_abhijeetmanhas/</link><dc:creator>Abhijeet Manhas</dc:creator><description>&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/1024/0*L9pxwg-v0q0SppOR.jpg"&gt;&lt;figcaption&gt;Comet C/2020 F3 (NEOWISE) will be visible in India for the next 20 days!&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;So now I’m halfway through the Summer of Code Journey. The last two weeks have been full of code reviews, code refactoring, and documenting stuff. I also helped new contributors to the SunPy to get them started. Thus I interacted more with the community this time.&lt;/p&gt;
&lt;h4&gt;Making HEC Fido Compatible&lt;/h4&gt;&lt;p&gt;HEC stands for &lt;strong&gt;Heliophysics Event Catalogue&lt;/strong&gt;. For your information, Heliophysics events are a large variety of phenomena that:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;originate or occur on the Sun.&lt;/li&gt;&lt;li&gt;Propagate through the interplanetary medium.&lt;/li&gt;&lt;li&gt;Interact with the geospace and planetary analogs.&lt;/li&gt;&lt;/ul&gt;&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/1024/0*7_zVGR8NSlvJ4vOi.jpg"&gt;&lt;figcaption&gt;An illustration of an Heliophysics Event| Earth’s magnetic field shielding our planet from solar particles. Credit: NASA/GSFC/SVS&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;HEC allows complex searches for events stored in indexed catalogs. SunPy has a HECClient which allows you to interface with Helio web services.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;In &lt;a href="https://github.com/sunpy/sunpy/pull/4358"&gt;PR #4358&lt;/a&gt; to enable Helio metadata searches with Fido (Federated Internet Data Obtainer), I made it inherit ~sunpy.net.BaseClient and overwrote a few methods for the client. New hec-specific attrs like MaxRecords, TableName, and Catalogue were defined to make _can_handle_query() work.&lt;/p&gt;
&lt;iframe src="http://openastronomy.org/Universe_OA/posts/2020/07/20200714_2212_abhijeetmanhas/" width="0" height="0" frameborder="0" scrolling="no"&gt;&lt;a href="https://medium.com/media/8cebddc67806c7e7130b0e70722fa975/href"&gt;https://medium.com/media/8cebddc67806c7e7130b0e70722fa975/href&lt;/a&gt;&lt;/iframe&gt;&lt;p&gt;A new class HECResponse was added to contain the responses retrieved after the search is executed. This made helio queries possible through Fido, although there are yet a lot of things that can be improved.&lt;/p&gt;
&lt;h4&gt;Updated tests for client redesign!&lt;/h4&gt;&lt;p&gt;&lt;a href="https://github.com/sunpy/sunpy/pull/4321"&gt;PR #4321&lt;/a&gt; (nice number!) is a major refactoring pull request for sunpy’s dataretriever module. So far it has negative 1500 lines of code.&lt;/p&gt;
&lt;p&gt;Finally SUVIClient was generalized which was the toughest of its counterparts. It supports the highest number of attributes. These are `Time`, Source, Instrument, Phsyobs, Provider, Level, Wavelength, and SatelliteNumber.&lt;/p&gt;
&lt;p&gt;The row data for the response table can either be contained as a dictionary or as data members of a class. A small hack made me achieve both. QueryResponseBlock was re-welcomed to the client.py. It now inherits OrderedDict and has dict values as class data members too. Passed Ordered Dictionary was used to update its self.__dict__.&lt;/p&gt;
&lt;iframe src="http://openastronomy.org/Universe_OA/posts/2020/07/20200714_2212_abhijeetmanhas/" width="0" height="0" frameborder="0" scrolling="no"&gt;&lt;a href="https://medium.com/media/b8dae93e3cdf41797f7797b54de3573b/href"&gt;https://medium.com/media/b8dae93e3cdf41797f7797b54de3573b/href&lt;/a&gt;&lt;/iframe&gt;&lt;h4&gt;Other Stuff&lt;/h4&gt;&lt;p&gt;My mentor made a list of 38 issues in Sunpy that were related to the project. I went through all of them and labeled them based on the submodules they are concerned with, how much I understand them, and their relevance with the GSoC project. Some of them were overlapping with things in my mind, so existing discussions on them shall be really helpful for me.&lt;/p&gt;
&lt;p&gt;I also spent time on writing the guidelines to extend Fido and how to add new sources to it, based on the redesign.&lt;/p&gt;
&lt;p&gt;Looking forward to capturing the comet in the coming days and having an awesome second half!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CARPE NOCTEM!&lt;/strong&gt;&lt;/p&gt;
&lt;img src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=ec4589cc452f" width="1" height="1"&gt;</description><category>SunPy</category><guid>http://openastronomy.org/Universe_OA/posts/2020/07/20200714_2212_abhijeetmanhas/</guid><pubDate>Tue, 14 Jul 2020 21:12:28 GMT</pubDate></item><item><title>GSoC 2020: Generalization of Clients</title><link>http://openastronomy.org/Universe_OA/posts/2020/06/20200629_1813_abhijeetmanhas/</link><dc:creator>Abhijeet Manhas</dc:creator><description>&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/800/0*EsjuLxEt1BrtrdCG"&gt;&lt;figcaption&gt;Solar Eclipse 2020 in Vadodara, Gujarat (Lucky Enough to witness it this year!)&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;This fortnight, I worked around iterating over different designs for redesigning the Dataretriever Clients so that its implementation can be simpler and more general. Generalization here means the ability to inherit most of the methods from the base class itself; therefore minimizing a number of similar methods in the subclasses.&lt;/p&gt;
&lt;h5&gt;Show Method for QueryResponse&lt;/h5&gt;&lt;p&gt;I got&lt;a href="https://github.com/sunpy/sunpy/pull/4309"&gt; PR #4309&lt;/a&gt; merged which solved an old &lt;a href="https://github.com/sunpy/sunpy/issues/556"&gt;Issue #556&lt;/a&gt;. A simple show() function in ~sunpy.net.base_client.BaseQueryResponse enabled QueryResponse objects for Dataretriever, VSO, and JSOC clients to specify the columns to be shown in the result.&lt;/p&gt;
&lt;p&gt;This returns an ~astropy.table.Table instance, so table operations can also be easily performed on the result.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;iframe src="http://openastronomy.org/Universe_OA/posts/2020/06/20200629_1813_abhijeetmanhas/" width="0" height="0" frameborder="0" scrolling="no"&gt;&lt;a href="https://medium.com/media/10fce45866473f2eb6ad74e7f98000eb/href"&gt;https://medium.com/media/10fce45866473f2eb6ad74e7f98000eb/href&lt;/a&gt;&lt;/iframe&gt;&lt;h5&gt;_extract_files_meta method in Scraper&lt;/h5&gt;&lt;p&gt;&lt;a href="https://github.com/sunpy/sunpy/pull/4313"&gt;PR #4313&lt;/a&gt; was merged in sunpy:master that allows the scraper to extract the metadata stored in the file URLs. This function will prove very useful for refactoring the whole ~sunpy.net.dataretriever submodule.&lt;/p&gt;
&lt;p&gt;A new module parse was added in ~sunpy.extern which allowed to specify the extractor which will parse the file URL and return a dict containing the value of attrs like Wavelength, Time, Level, etc. Even the URL is returned by the method, which ensures no changes are to be made in fetch() methods for clients.&lt;/p&gt;
&lt;iframe src="http://openastronomy.org/Universe_OA/posts/2020/06/20200629_1813_abhijeetmanhas/" width="0" height="0" frameborder="0" scrolling="no"&gt;&lt;a href="https://medium.com/media/da15de642196febf9eab940219efac0f/href"&gt;https://medium.com/media/da15de642196febf9eab940219efac0f/href&lt;/a&gt;&lt;/iframe&gt;&lt;h5&gt;Playing with post filters&lt;/h5&gt;&lt;p&gt;Last fortnight I was working with post filters and concatenation of responses for VSO. Last week I dabbled a bit with post-filters for attrs used in all net clients. Using single_dispatch decorator over filter_results enabled post-filtering in dataretriver and VSO. It is pretty similar to the way it is done for ~sunpy.net.vso.attrs.&lt;/p&gt;
&lt;iframe src="http://openastronomy.org/Universe_OA/posts/2020/06/20200629_1813_abhijeetmanhas/" width="0" height="0" frameborder="0" scrolling="no"&gt;&lt;a href="https://medium.com/media/274b4e0b885d17b391589d15c593f046/href"&gt;https://medium.com/media/274b4e0b885d17b391589d15c593f046/href&lt;/a&gt;&lt;/iframe&gt;&lt;h4&gt;Redesigning GenericClient&lt;/h4&gt;&lt;p&gt;So there is a draft &lt;a href="https://github.com/sunpy/sunpy/pull/4321"&gt;PR #4321&lt;/a&gt; where work is in progress for the new implementation for the generalization. QueryResponeBlock is removed from the client.py since by few changes in the QueryResponse enables us to do it all using a dictionary. Similarly &lt;a href="https://github.com/sunpy/sunpy/pull/4321/files"&gt;a lot of methods were removed or changed&lt;/a&gt; under the aim to simplify the two Generic Classes.&lt;/p&gt;
&lt;p&gt;Not only the base class, even the client class were made simple. For simple clients, we are supposed to only define required attrs, optional attrs, a baseurl, and an extractor which makes the search working.&lt;/p&gt;
&lt;p&gt;After this refactoring, the example dataretriever source client class would look something like this:&lt;/p&gt;
&lt;iframe src="http://openastronomy.org/Universe_OA/posts/2020/06/20200629_1813_abhijeetmanhas/" width="0" height="0" frameborder="0" scrolling="no"&gt;&lt;a href="https://medium.com/media/759cceb1f744c525c6a55e80b8f9ecb9/href"&gt;https://medium.com/media/759cceb1f744c525c6a55e80b8f9ecb9/href&lt;/a&gt;&lt;/iframe&gt;&lt;p&gt;Only a class method and few class attributes are sufficient for defining a simple DR client!&lt;/p&gt;
&lt;h5&gt;Hooks for translating attrs&lt;/h5&gt;&lt;p&gt;There are some clients which deviate from generalization. For those clients, it was discussed in a meeting with mentors that post-hooks and pre-hooks for scraper are to be designed which shall perform a translation of attrs provided in the search to their representation in the url. While working around it, I discovered few bugs in fermi_gbm and other clients to be addressed in scraper hooks. Responses for Detector numbers 10 and 11 were never returned because in the url they were represented by na and nb respectively. They will be fixed by translators as a part of pre-hook before passing it to the scraper.&lt;/p&gt;
&lt;h5&gt;Moving Rhessi out from Generic&lt;/h5&gt;&lt;p&gt;Since rhessi didn’t follow the Generalization as the metadata can’t just be extracted from the file URL, so it is being implemented as subclass of base_client.&lt;/p&gt;
&lt;p&gt;Every week we move closer and closer to Generalization :). Enjoying the meetings where I and my mentors discuss the pros and cons of different designs of GenericClient!&lt;/p&gt;
&lt;img src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=1879f5dfe436" width="1" height="1"&gt;</description><category>SunPy</category><guid>http://openastronomy.org/Universe_OA/posts/2020/06/20200629_1813_abhijeetmanhas/</guid><pubDate>Mon, 29 Jun 2020 17:13:52 GMT</pubDate></item><item><title>GSOC 2020: The Coding period commences!</title><link>http://openastronomy.org/Universe_OA/posts/2020/06/20200615_0923_abhijeetmanhas/</link><dc:creator>Abhijeet Manhas</dc:creator><description>&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/1024/1*TYpSW6DKJusjkp7EMXIhyA.png"&gt;&lt;figcaption&gt;Sunrise in Gujarat, near Vadodara city&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;So we got started with the coding period, I had a couple of community meetings with my mentors and few full community meetings where I discussed what I was working upon and what was needed to be done.&lt;/p&gt;
&lt;p&gt;Major work in this fortnight was on refactoring&lt;strong&gt; &lt;/strong&gt;&lt;em&gt;Dataretriever Clients &lt;/em&gt;QueryResponse tables Pull request, &lt;a href="https://github.com/sunpy/sunpy/pull/4213"&gt;PR #&lt;strong&gt;4213&lt;/strong&gt;&lt;/a&gt;. This enabled the simple clients to show more metadata information like SatelliteNumber , Detector, Level, etc. in their response tables. All this information was extracted from the URL corresponding to the desired files using the parser.&lt;/p&gt;
&lt;p&gt;What did it change? Earlier the things looked like this:&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;iframe src="http://openastronomy.org/Universe_OA/posts/2020/06/20200615_0923_abhijeetmanhas/" width="0" height="0" frameborder="0" scrolling="no"&gt;&lt;a href="https://medium.com/media/7f467616b2076a3bc10e61d6de755ee3/href"&gt;https://medium.com/media/7f467616b2076a3bc10e61d6de755ee3/href&lt;/a&gt;&lt;/iframe&gt;&lt;p&gt;And now:&lt;/p&gt;
&lt;iframe src="http://openastronomy.org/Universe_OA/posts/2020/06/20200615_0923_abhijeetmanhas/" width="0" height="0" frameborder="0" scrolling="no"&gt;&lt;a href="https://medium.com/media/c9f17aab04a6eac7d1ddd745b2d2f0bf/href"&gt;https://medium.com/media/c9f17aab04a6eac7d1ddd745b2d2f0bf/href&lt;/a&gt;&lt;/iframe&gt;&lt;p&gt;Those np.nan Wavelength values annoyed me the most and now we not only be having the correct wavelengths, but other details too reflected in the response table. All the columns which were not relevant to the client were removed.&lt;/p&gt;
&lt;p&gt;Was that all about it? No. We need to find better ways of implementing the same feature. Earlier I used a _get_metadata_for_url method to extract all details from the URL, which was separately implemented for all clients. After getting the suggestions from my mentors, I implemented it in a better way; extracting all info in the scraper itself. After completing all tests, we discovered that there can be an even better way of doing this; by removing the client-specific _get_url_for_timerange() method itself! I used the registered attrs for achieving the same. All attrs were iterated to get the list of all possible directories, and then the only thing scraper has to do was pattern matching.&lt;/p&gt;
&lt;p&gt;The idea was to closely link scraper and GenericClient to have minimum client-specific code in their class implementations. I’ll push the changes as I complete all failing tests due to the change and add documentation for the API.&lt;/p&gt;
&lt;p&gt;All the 4 Ground Clients PRs were closed, after a discussion with the SunPy and VSO community. I updated my&lt;a href="https://github.com/sunpy/sunpy/pull/5055"&gt; Gong Synoptic Client Pull Request&lt;/a&gt; and got so far all reviews resolved. This would enable SunPy to access the Magnetogram Synoptic Map archives from NSO-GONG. Originally the issue was opened in &lt;a href="https://github.com/dstansby/pfsspy"&gt;pfsspy&lt;/a&gt;&lt;strong&gt;. &lt;/strong&gt;I also worked on a fix to the wrong goes Satellite Number issue in &lt;a href="https://github.com/sunpy/sunpy/pull/4288"&gt;PR #&lt;strong&gt;4288&lt;/strong&gt;&lt;/a&gt; recently. Using **kwargs in _get_overlap_urls method fixed the bug.&lt;/p&gt;
&lt;p&gt;There were other PRs too made and updated in this period which were merged before SunPy’s 2.0 release. I reduced the time for a goes_suvi client test from 8–10 secs to 1.5–2 secs on my system, in &lt;a href="https://github.com/sunpy/sunpy/pull/4131"&gt;PR #&lt;strong&gt;4099&lt;/strong&gt;&lt;/a&gt;. I had to explore why scraper took so much time for the test. Another one &lt;a href="https://github.com/sunpy/sunpy/pull/4132"&gt;PR #&lt;strong&gt;4132&lt;/strong&gt;&lt;/a&gt; was a way to prevent a future bug in scraper’s filelist method; so now it checks if the &lt;em&gt;&amp;lt;a href&amp;gt; &lt;/em&gt;in any webpage is None or not.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/sunpy/sunpy/pull/4011"&gt;PR #&lt;strong&gt;4011&lt;/strong&gt;&lt;/a&gt; was also updated which will restore the ability to post search filter the responses from VSO. I also went through the JSOC codebase and fido_factory.py to understand the complexities of implementation of&lt;em&gt; Fido post-search filter&lt;/em&gt; in SunPy. It is the next target in my Project. Just as a glimpse, this is how the VSO will look after post search filtering. I have added an extra concatenation routine by overloading + operator.&lt;/p&gt;
&lt;iframe src="http://openastronomy.org/Universe_OA/posts/2020/06/20200615_0923_abhijeetmanhas/" width="0" height="0" frameborder="0" scrolling="no"&gt;&lt;a href="https://medium.com/media/ef282104564e47da6f9bef13c237313e/href"&gt;https://medium.com/media/ef282104564e47da6f9bef13c237313e/href&lt;/a&gt;&lt;/iframe&gt;&lt;p&gt;I’m enjoying my summer now, wherever I face diffculties I talk with my mentors to get it resolved. I faced some issues in connectivity due to the thunderstorms out there in my city, but now everything is back to normal. The weather is pleasant now so I can engage more!&lt;/p&gt;
&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/1024/1*g_aP_bLgp1XI6ACBOrN69A.png"&gt;&lt;figcaption&gt;Before Thuderstorms in Vadodara!&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Looking forward to making more PRs in the next fortnight!&lt;/p&gt;
&lt;p&gt;CARPE NOCTEM!&lt;/p&gt;
&lt;img src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=b2eee33f274e" width="1" height="1"&gt;</description><category>SunPy</category><guid>http://openastronomy.org/Universe_OA/posts/2020/06/20200615_0923_abhijeetmanhas/</guid><pubDate>Mon, 15 Jun 2020 08:23:54 GMT</pubDate></item><item><title>GSoC 2020: The Start of my summer with SunPy</title><link>http://openastronomy.org/Universe_OA/posts/2020/05/20200519_0513_abhijeetmanhas/</link><dc:creator>Abhijeet Manhas</dc:creator><description>&lt;figure&gt;&lt;img alt="Group of youngsters looking at Planets through Binoculars" src="https://cdn-images-1.medium.com/max/1024/1*KiNZL-dSwxO573jg3EF3Og.jpeg"&gt;&lt;figcaption&gt;Observing Jupiter’s moons and Saturn at 2:00 AM in a pre-Exam hangout with my friends at Campus :)&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The time I am writing this, the temperature has already shot up to 45 degree Celsius; clearly, Sun is usually unkind to me in the city of Vadodara, India. Everything was great, I was chilling out at my Campus &lt;a href="http://iitmandi.ac.in"&gt;IIT Mandi&lt;/a&gt; until the Corona thing happened. It changed my google search results for “Corona” from this …&lt;/p&gt;
&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/1024/0*3Y4pwOLqZTZfpojp.jpg"&gt;&lt;figcaption&gt;Stellar Corona; Image Source: Wikipedia&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;To this :/&lt;/p&gt;
&lt;figure&gt;&lt;img alt="CoronaVirus Image" src="https://cdn-images-1.medium.com/max/273/1*aWiQ-3qCe-LDecfb7iOtsA.png"&gt;&lt;/figure&gt;&lt;h4&gt;Background&lt;/h4&gt;&lt;p&gt;Going back in time to my school days, I developed a great interest in Astronomy. I enjoyed Planetarium trips, national competitions; even remembering just numerical data about the cosmos! Fast-forwarding a few years, I’m at IIT Mandi completing my bachelor in Computer Science.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;The best thing happened to me at my institute was STAC…&lt;/p&gt;
&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/538/1*5QVxaKqpE8zu8diAswRskw.png"&gt;&lt;figcaption&gt;STAC’s telescope assembled for Moon observations, place: SAC Terrace, IIT Mandi&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;STAC is&lt;a href="http://stac.iitmandi.co.in"&gt; Space Technology and Astronomy Cell&lt;/a&gt; of IIT Mandi which allowed not only to continue my passion for Astronomy but also to develop interest among my juniors. I was selected as a coordinator of the Club and organized various astronomy sessions as telescope night outs with students of our institute. I got to learn and engage in a lot of astrophysics and python owing to the open-source culture established by our seniors in the STAC and Programming Club of IIT Mandi.&lt;/p&gt;
&lt;p&gt;I actively coordinated in organizing AstraX (the annual Astro-meet) which also witnessed Dr. Stuart Mumord and Dr. Nick Murphy as keynote speakers. I introduced students of a local college with using Python for Astronomy in an event sponsored by Python Software Foundation.&lt;/p&gt;
&lt;figure&gt;&lt;img alt="Newspaper cutting, image of students organizing a coding session" src="https://cdn-images-1.medium.com/max/1024/1*kr7WdXYIvAjcV8jCDIGq4Q.png"&gt;&lt;figcaption&gt;Bhavya Bhatt, Tanmay Rustagi and I featured in a local newspaper for organizing a PSF workshop.&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;Stepping in the world of Open-Source&lt;/h4&gt;&lt;p&gt;I was introduced to “What is Open-Source?” and “how to use git?” in my first year. I initially started my contributions to &lt;a href="http://github.com/STAC-IITMandi"&gt;STAC Github repositories&lt;/a&gt;. I opened some issues, created silly PRs, and messed up my git history many times while resolving reviews. Looking at those PRs now, I feel grateful to those who patiently reviewed them. I went through many StackOverflow threads to fix my git sins.&lt;/p&gt;
&lt;figure&gt;&lt;img alt="Github page for STAC" src="https://cdn-images-1.medium.com/max/999/1*1bgYWGu7_G_pIuBDpFDxMg.png"&gt;&lt;figcaption&gt;STAC on GitHub&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;I applied to LSF for GSoC 2019. I lagged in community interaction as I felt shy and started very late. Thus, my proposal wasn’t accepted. I decided to give it a go again in 2020. I started early and joined several chat channels(mostly of organizations under &lt;a href="https://openastronomy.org/"&gt;OpenAstronomy&lt;/a&gt;) for interacting with developers out there.&lt;/p&gt;
&lt;h4&gt;Me and SunPy&lt;/h4&gt;&lt;p&gt;I started with exploring raised issues on the repository and expressed a desire to work on the trivial ones initially. Though I was quite comfortable dealing with conflicts but contributed to a repo with a thorough test-suite for the first time. I was helped a lot by the&lt;a href="http://sunpy.org"&gt; SunPy&lt;/a&gt; community with my PRs and celebrated my first contribution in December of 2019. I owe a lot to the community; being part of them helped to polish my skills and increase my confidence.&lt;/p&gt;
&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/1019/1*UA6AADBLzoCBhCDFe5aX6g.png"&gt;&lt;figcaption&gt;My first pull request in SunPy&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The `net` submodule was more intriguing for me. I tried to bring back the old client pull requests. After the ideas list was out, I was very excited to work on Fido(Federated Internet Data Obtainer).&lt;/p&gt;
&lt;p&gt;I was also invited to &lt;em&gt;Python in Astronomy&lt;/em&gt; Hack Days that took place in April this year. I worked on adding a `Gong Synoptic Map Client for Fido` with &lt;a href="http://github.com/dstansby"&gt;&lt;strong&gt;&lt;em&gt;David Stansby&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;&lt;em&gt;.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img alt="Video screenshot of PyAstro HackDay" src="https://cdn-images-1.medium.com/max/1024/1*ccxtL1B6_-3sefvoKdushg.png"&gt;&lt;figcaption&gt;PyAstro conference hackday liverstream screenshot | Solar magnetic field maps for pfsspy&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;At 11:00 PM IST on the 4th of May, I received an email from Google. I was going to spend my summer on improving an interface which fetches solar physics data from satellites and observatories!&lt;/p&gt;
&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/1024/1*jT0kvnSy94TwIw9ewb069g.png"&gt;&lt;figcaption&gt;&lt;a href="https://summerofcode.withgoogle.com/projects/#6648215463526400"&gt;GSoC Project Link&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;I had a meeting with my mentors &lt;a href="http://github.com/cadair"&gt;&lt;strong&gt;&lt;em&gt;Stuart Mumford&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;&lt;em&gt; &lt;/em&gt;&lt;/strong&gt;and &lt;a href="https://github.com/nabobalis"&gt;&lt;strong&gt;&lt;em&gt;Nabil Frei&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;&lt;em&gt;j &lt;/em&gt;&lt;/strong&gt;to formalize the full scope of the project. I feel very fortunate to work with them. I am looking forward to having a great summer ahead in their awesome guidance!&lt;/p&gt;
&lt;img src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=d8af558ad399" width="1" height="1"&gt;</description><category>SunPy</category><guid>http://openastronomy.org/Universe_OA/posts/2020/05/20200519_0513_abhijeetmanhas/</guid><pubDate>Tue, 19 May 2020 04:13:15 GMT</pubDate></item></channel></rss>