<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Universe OpenAstronomy (Posts about radis)</title><link>http://openastronomy.org/Universe_OA/</link><description></description><atom:link href="http://openastronomy.org/Universe_OA/categories/radis.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Sun, 22 Jun 2025 02:13:45 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Moving to the Frontend</title><link>http://openastronomy.org/Universe_OA/posts/2025/06/20250620_0505_mohyware/</link><dc:creator>mohyware</dc:creator><description>&lt;p&gt;As part of the ongoing development, we’ve now begun focusing on the frontend side of the project, improving the user experience and preparing for more database integrations.&lt;/p&gt;
&lt;h4&gt;Initial Cleanup&lt;/h4&gt;&lt;p&gt;To ensure a clean development workflow, I started by:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Fixing linting and type-checking issues to maintain code quality.&lt;/li&gt;&lt;li&gt;Repairing frontend tests to make sure new changes are verifiable.&lt;/li&gt;&lt;li&gt;This was important to establish a solid pipeline, so any new code added to the frontend can be tested and reviewed confidently.&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;Full Dark Mode Support&lt;/h4&gt;&lt;p&gt;A major enhancement was implementing &lt;strong&gt;dark mode&lt;/strong&gt; across the entire frontend, not just the MUI (Material UI) components, but also the &lt;strong&gt;plotting graph area&lt;/strong&gt;.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;This took some effort as it required:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Migrating from &lt;strong&gt;Joy UI components&lt;/strong&gt; (buttons, inputs, etc.) to &lt;strong&gt;Material UI components&lt;/strong&gt; to ensure compatibility with CssVarsProvider.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Refactoring existing styles&lt;/strong&gt; to align with the new Material UI design system.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The result is a visually cohesive and fully functional dark mode experience!&lt;/p&gt;
&lt;h4&gt;Database Integrations on the Frontend&lt;/h4&gt;&lt;p&gt;I’ve also added frontend support for &lt;strong&gt;ExoMol&lt;/strong&gt; and &lt;strong&gt;NIST&lt;/strong&gt; databases:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;ExoMol&lt;/strong&gt; is now functional. However, it still requires optimization. Specifically, setting the broadf variable to False can help reduce unnecessary broadening downloads overhead.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;NIST&lt;/strong&gt; and &lt;strong&gt;HITEMP&lt;/strong&gt; are not yet fully working, as they require login through the HITRAN website. To address this, I’ve added a script that automatically sets the email and password in the RADIS configuration, enabling these databases to work when the application is run.&lt;/li&gt;&lt;/ul&gt;&lt;img alt="" height="1" src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=5ae8056490f5" width="1"&gt;</description><category>radis</category><guid>http://openastronomy.org/Universe_OA/posts/2025/06/20250620_0505_mohyware/</guid><pubDate>Fri, 20 Jun 2025 04:05:37 GMT</pubDate></item><item><title>Yeah! I have a GSoC project with Radis</title><link>http://openastronomy.org/Universe_OA/posts/2025/06/20250607_0949_prtm2110/</link><dc:creator>Pratham</dc:creator><description>&lt;p&gt;Finally, I have been contributing to scientific open source for about a year now and it has taught me a lot I mean a lot, I still remember searching for a simple documentation issue so I could get it merged and call myself a “contributor” haha, and that got me started in scientific open source. Since then, I have been able to make some truly meaningful contributions to many projects, and here I am writing a blog for GSoC with Radis which is a pythonic library for fast line-by-line code for high resolution infrared molecular spectra, under the OpenAstronomy umbrella.&lt;/p&gt;
&lt;p&gt;So my project is cool ngl, and it is titled “Fast Parsing of Large Databases and Execution Bottlenecks” basically there exists a large highly compressed CO₂ spectroscopic database of size 6 GB file that decompresses to about 50 GB and takes at least 2.5 hours to parse and convert into a DataFrame. As you might expect, my project is about significantly reducing the parsing time and finding a workaround for storing only the “necessary” parts of the decompressed file.&lt;/p&gt;
&lt;p&gt;Radis is pythonic and sometimes python gets real slow if not used the way it is meant to be used, so my initial thought was to first clean up the existing code and use vectorised operations and with numba we should be able to see some real optimisation. But then I realized the current implementation already has the right vectorized operations on DataFrames, and Pandas’ vectorized methods are already implemented in optimized C/Cython loops. So there isn’t much more to do here other than replace a few overheads with other operations. After that, as discussed with my mentors I can use a C++ Single Instruction Multiple Data (SIMD) mechanism to parse the file and create a python interface on top of that with pybind11 or cython and other option but this will cost us portability as compilation will be a thing that is to considered. Other approach which is using vulkan API in python as it supports CPU as well GPU parallelism and its cross platform as it will works on all CPU architectures.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;The first thing I did was profile the hit2df function for the NO₂ molecule, which is much smaller compared to CO₂ but uses the same operations. That gave a good idea of the actual bottlenecks and where I need to work.&lt;/p&gt;
&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/1024/1*9OApPZeVUuVw2vAwSCqGQg.png"&gt;&lt;figcaption&gt;Profiling of `hit2df` function for NO₂ molecule&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;As you can see, most of the time is spent in post_process_hitran_data and which is expected because this function calls parse_local_quanta and parse_global_quanta both applies regex across multiple string columns, which is slow at scale, so I switced to fixed‐width slicing to avoid that per-row overhead, of course this was possible as the dataset is consistent and doesn’t require regex at all (I really hope).&lt;/p&gt;
&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/1024/0*4T1gkGX-4N4_CzO3"&gt;&lt;/figure&gt;&lt;p&gt;This resulted in a clean improvement of about 38%, which will serve as the default option, along with the Vulkan-API mechanism, which I expect will yield a huge optimization compared to the default. That’s something we will see that in the next episode, stay tuned ;)&lt;/p&gt;
&lt;img alt="" height="1" src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=113900105c46" width="1"&gt;</description><category>radis</category><guid>http://openastronomy.org/Universe_OA/posts/2025/06/20250607_0949_prtm2110/</guid><pubDate>Sat, 07 Jun 2025 08:49:18 GMT</pubDate></item><item><title>Starting My GSoC Journey with RADIS</title><link>http://openastronomy.org/Universe_OA/posts/2025/06/20250607_0422_darshvn/</link><dc:creator>Darshan Patil</dc:creator><description>&lt;h4&gt;Getting Started&lt;/h4&gt;&lt;p&gt;A month has passed since the GSoC results came out, and honestly, and the excitement still hasn’t quite settled. That announcement day was pretty intense, my mind was racing, second-guessing everything. But wow, things worked out even better than I’d hoped.&lt;/p&gt;
&lt;p&gt;The community bonding period hit right during my final exams, which was tricky timing. So I focused on what mattered most, getting to know my mentors, joining the weekly calls, and really wrapping my head around the project from a theoretical standpoint.&lt;/p&gt;
&lt;h4&gt;What I’m Working On&lt;/h4&gt;&lt;p&gt;I’m working on something called “&lt;strong&gt;Electronic Spectra for RADIS.&lt;/strong&gt;” Basically, RADIS is this awesome library for modeling rovibrational spectra, but it’s missing one key piece; electronic transitions. That’s where I come in! I want to add that missing functionality and make RADIS even more powerful.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;Even though I already knew RADIS pretty well, I spent time going through everything again to make sure I really understood what needed to be done. No point in reinventing the wheel, right? My mentor Nicolas helped me put together a solid plan that actually makes sense.&lt;/p&gt;
&lt;h4&gt;Breaking It Down&lt;/h4&gt;&lt;p&gt;Here’s how I’m breaking it down into four main chunks:&lt;/p&gt;
&lt;p&gt;First up is &lt;strong&gt;OH Electronic Spectra Calculation&lt;/strong&gt; — I’m starting with OH molecules as my test case and building the ability to manually tweak electronic band intensities when things are not in equilibrium as suggested by Nicolas in the project idea, “&lt;em&gt;starting with non-equilibrium spectra of atomic species makes sense since the physics is slightly easier than for molecules&lt;/em&gt;.”&lt;/p&gt;
&lt;p&gt;Then comes &lt;strong&gt;Electronic Temperature Support&lt;/strong&gt; — this is where I’ll add calculations for electronic state populations, assuming the electronic temperature is different from the other temperatures.&lt;/p&gt;
&lt;p&gt;Third is &lt;strong&gt;Equilibrium OH Spectrum&lt;/strong&gt; — putting together everything from the earlier steps to calculate OH spectra when things are in equilibrium.&lt;/p&gt;
&lt;p&gt;Finally, &lt;strong&gt;Extension to ExoMol Molecules&lt;/strong&gt; — taking what I’ve built and making it work for all ExoMol molecules.&lt;/p&gt;
&lt;p&gt;This approach builds on what RADIS already does well while systematically adding the electronic transition stuff, all within the GSoC timeline.&lt;/p&gt;
&lt;h4&gt;The Technical Stuff&lt;/h4&gt;&lt;h4&gt;Working with Data Files&lt;/h4&gt;&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/1024/1*pTN3jp3K2szObHXmSYp3gw.png"&gt;&lt;figcaption&gt;Sample of the OH .states file format showing electronic state information and quantum numbers.&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;To kick off the first milestone, I’m using the .states file from ExoMol for OH molecules, which has all the electronic state info and quantum numbers. RADIS already has a read_states() function in exomolapi.py that can parse this format, but right now it only extracts:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;i: State counting number&lt;/li&gt;&lt;li&gt;E: State energy&lt;/li&gt;&lt;li&gt;g: State degeneracy&lt;/li&gt;&lt;li&gt;J: Total angular momentum&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;I’ll modify this to additionally extract the electronic-specific parameters:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;State: Electronic state label (e.g., X(²Π))&lt;/li&gt;&lt;li&gt;Λ: Electronic angular momentum quantum number&lt;/li&gt;&lt;li&gt;Σ: Spin angular momentum quantum number&lt;/li&gt;&lt;li&gt;Ω: Total electronic angular momentum quantum number&lt;/li&gt;&lt;li&gt;Type: State type (e.g., Ma for main)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;This will be the foundation for getting electronic transitions working in RADIS.&lt;/p&gt;
&lt;h4&gt;Making the Calculations Work&lt;/h4&gt;&lt;p&gt;For the population calculations, I’ll be working with the existing partfunc.py file. I'm planning to create a new ElectronicPartitionFunction class and implement the Boltzmann distribution for electronic states. Nicolas referenced a formula from his &lt;a href="https://theses.fr/2020UPAST052"&gt;thesis (Chapter 1, Section 1.1)&lt;/a&gt; that’s relevant to what I’m implementing.&lt;/p&gt;
&lt;figure&gt;&lt;img alt="Boltzmann distribution" src="https://cdn-images-1.medium.com/max/1024/1*bEtk5kQGqpD5kbzwgmLeCQ.png"&gt;&lt;figcaption&gt;Boltzmann distribution&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;All of this will eventually get integrated into SpectrumFactory to compute electronic spectra in SpectrumFactory.non_eq_spectrum(). I'll be adding an electronic temperature (Telec) parameter and thinking about using the overpopulation parameter for manually adjusting electronic band intensities.&lt;/p&gt;
&lt;h4&gt;What’s Next&lt;/h4&gt;&lt;p&gt;I’m planning to work on all this over the next few weeks to nail the first milestone. I’m genuinely excited to be part of this project and can’t wait to learn tons and build something really cool. This is going to be an amazing journey!&lt;/p&gt;
&lt;img alt="" height="1" src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=14b98a245c55" width="1"&gt;</description><category>radis</category><guid>http://openastronomy.org/Universe_OA/posts/2025/06/20250607_0422_darshvn/</guid><pubDate>Sat, 07 Jun 2025 03:22:57 GMT</pubDate></item><item><title>GSoC 2025 Blog — Week 1: Starting the Project</title><link>http://openastronomy.org/Universe_OA/posts/2025/06/20250605_0225_mohyware/</link><dc:creator>mohyware</dc:creator><description>&lt;h4&gt;GSoC 2025 Blog — Starting the Project&lt;/h4&gt;&lt;h4&gt;Kicking Things Off&lt;/h4&gt;&lt;p&gt;The first weeks of GSoC were all about getting familiar with the project, understanding its current state, and laying the groundwork for upcoming work. We began by &lt;strong&gt;listing the key features&lt;/strong&gt; we plan to implement and prioritizing them based on impact and feasibility.&lt;/p&gt;
&lt;h4&gt;Cleaning Up the Repo&lt;/h4&gt;&lt;p&gt;Before diving into development, we focused on improving the current state of the codebase:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Filtered through existing PRs.&lt;/li&gt;&lt;li&gt;Merged those that were ready.&lt;/li&gt;&lt;li&gt;Closed duplicates or low-quality submissions.&lt;/li&gt;&lt;li&gt;Requested changes when necessary.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;This cleanup helped fix some bugs and made the repository more maintainable moving forward.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;h4&gt;CI Enhancements&lt;/h4&gt;&lt;p&gt;To ensure future contributions are smoother, we improved the Continuous Integration setup:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Added conditional CI jobs to run &lt;strong&gt;frontend or backend tests&lt;/strong&gt; only when their respective files are changed.&lt;/li&gt;&lt;li&gt;Introduced &lt;strong&gt;Codecov comments&lt;/strong&gt; to show coverage of newly added lines, making it easier to track test quality in PRs.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;These changes should streamline reviews and reduce unnecessary CI runs.&lt;/p&gt;
&lt;h4&gt;Early Contributions&lt;/h4&gt;&lt;p&gt;I also started contributing new features and improvements:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Integrated ExoMol and NIST databases&lt;/strong&gt; into the backend.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;While integrating the NIST database, I encountered a tricky error related to the RADIS package:&lt;/p&gt;
&lt;pre&gt;No databank named nist in `/home/mohy/radis.json`. Available databanks: […]&lt;/pre&gt;&lt;p&gt;It turned out that the version of RADIS in the was outdated and didn’t recognize the `nist` databank. This was fixed by upgrading RADIS:&lt;/p&gt;
&lt;pre&gt;pip install — upgrade radis&lt;/pre&gt;&lt;p&gt;Then, another error popped up related to pandas:&lt;/p&gt;
&lt;pre&gt;No such keys(s): 'future.no_silent_downcasting'&lt;/pre&gt;&lt;p&gt;This was caused by version incompatibility, which was resolved by upgrading pandas:&lt;/p&gt;
&lt;pre&gt;pip install — upgrade pandas&lt;/pre&gt;&lt;p&gt;After these upgrades, the databases worked correctly on the backend. The frontend integration and performance optimizations (e.g., caching) are next on my list.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Increased backend test coverage&lt;/strong&gt;, especially for newly added endpoints and database integrations.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;That’s a wrap for the first weeks! It’s been a productive start, and I’m excited to keep building and learning in the coming weeks. Stay tuned for more updates!&lt;/p&gt;
&lt;img alt="" height="1" src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=59a02a05ae58" width="1"&gt;</description><category>radis</category><guid>http://openastronomy.org/Universe_OA/posts/2025/06/20250605_0225_mohyware/</guid><pubDate>Thu, 05 Jun 2025 01:25:44 GMT</pubDate></item><item><title>A summary</title><link>http://openastronomy.org/Universe_OA/posts/2024/08/20240825_0000_code29563/</link><dc:creator>code29563</dc:creator><description>&lt;p&gt;RADIS describes itself as &lt;a href="https://radis.readthedocs.io/en/latest/"&gt;‘a fast line-by-line code for high resolution infrared molecular spectra’&lt;/a&gt;. My project focussed on adding support for atomic line databases to RADIS, which has up till now catered only for molecular databases. Atomic lines differ significantly from molecular lines in how they are affected by Lorentzian broadening and how non-equilibrium spectra are handled.&lt;/p&gt;

&lt;p&gt;The main goal was &lt;a href="https://github.com/radis/radis/pull/652"&gt;adding support for the Kurucz atomic database&lt;/a&gt;, which is now complete. This laid the basic structure for adding new atomic databases, and &lt;a href="https://github.com/radis/radis/pull/689"&gt;a PR is now open for adding NIST&lt;/a&gt;.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;

&lt;p&gt;A number of side issues have arisen throughout the course of the project and been tended to within those PRs, whereas independent issues and PRs have been opened for other issues:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The non-equilibrium linestrength calculation for both atoms and molecules now &lt;a href="https://github.com/radis/radis/pull/676"&gt;uses the Einstein Coefficient instead of the reference linestrength&lt;/a&gt;, thereby allowing weaker spectra to be seen&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/radis/radis/issues/661"&gt;The issue was also raised&lt;/a&gt; as to whether RADIS should be automatically modifying the user config file, and if so then how. That has been tended to in the Kurucz and NIST implementation so far and could be expanded to the molecular databases too.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/radis/radis/pull/675"&gt;fixing the removal of ‘object’ type columns from the line dataframe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/radis/radis/issues/666"&gt;Debugging a docstring example that didn’t actually work&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Prior to the project starting, &lt;a href="https://github.com/radis/radis/pull/646"&gt;a PR&lt;/a&gt; was also opened to allow users to specify the minimum linestrength at which to cut off weaker lines by specifying them as the weakest x% of lines.&lt;/p&gt;</description><category>radis</category><guid>http://openastronomy.org/Universe_OA/posts/2024/08/20240825_0000_code29563/</guid><pubDate>Sat, 24 Aug 2024 23:00:00 GMT</pubDate></item><item><title>Implementing the NIST database</title><link>http://openastronomy.org/Universe_OA/posts/2024/08/20240812_0000_code29563/</link><dc:creator>code29563</dc:creator><description>&lt;ul&gt;
&lt;li&gt;The Einstein A coefficient is now used directly for calculating the non-equilibrium linestrength, given that it is calculated anyway for non-equilibrium spectra where it isn’t already present, rather than removing the temperature-dependent component of the reference linestrength, which was found to result in some atomic spectra not appearing. This also removes the need to calculate the reference linestrength for databanks where it’s not already present.&lt;/li&gt;
&lt;li&gt;Removed some redundnant code and miscellaneous fixes and improvements.&lt;/li&gt;
&lt;!-- TEASER_END --&gt;
&lt;li&gt;Fixed the documentation for many parts of the new code for atomic spectra so the formatting appears correct on Read the Docs.&lt;/li&gt;
&lt;li&gt;The pull request for the implementation of the Kurucz database has been merged&lt;/li&gt;
&lt;li&gt;Work has started on adding support for the NIST atomic database and it is currently at a stage where it produces working spectra.&lt;/li&gt;
&lt;/ul&gt;</description><category>radis</category><guid>http://openastronomy.org/Universe_OA/posts/2024/08/20240812_0000_code29563/</guid><pubDate>Sun, 11 Aug 2024 23:00:00 GMT</pubDate></item><item><title>Implementing non-equilibrium spectra</title><link>http://openastronomy.org/Universe_OA/posts/2024/07/20240729_0000_code29563/</link><dc:creator>code29563</dc:creator><description>&lt;ul&gt;
&lt;li&gt;Support has been added for non-equilibrium spectra. Comparisons with SpectraPlot are still showing discrepancies, the source of which is not yet resolved.&lt;/li&gt;
&lt;li&gt;References have been added for the Kurucz databank&lt;/li&gt;
&lt;!-- TEASER_END --&gt;
&lt;li&gt;Miscellaneous minor improvements and fixes in the code and docs&lt;/li&gt;
&lt;/ul&gt;</description><category>radis</category><guid>http://openastronomy.org/Universe_OA/posts/2024/07/20240729_0000_code29563/</guid><pubDate>Sun, 28 Jul 2024 23:00:00 GMT</pubDate></item><item><title>Finishing up equilibrium spectra</title><link>http://openastronomy.org/Universe_OA/posts/2024/07/20240714_0000_code29563/</link><dc:creator>code29563</dc:creator><description>&lt;ul&gt;
&lt;li&gt;Tests have been added for the implementation of the Kurucz database and associated parts of the code&lt;/li&gt;
&lt;li&gt;Examples have been added relating to the Lorentzian broadening of atomic lines and partition functions.&lt;/li&gt;
&lt;!-- TEASER_END --&gt;
&lt;li&gt;The function to parse Kurucz linelists has been re-written based on Pandas.&lt;/li&gt;
&lt;li&gt;The precision of some parts of the code has been improved by using &lt;code class="language-plaintext highlighter-rouge"&gt;numpy.expm1&lt;/code&gt; rather than &lt;code class="language-plaintext highlighter-rouge"&gt;numpy.exp&lt;/code&gt;, thereby showing weaker spectra that otherwise weren’t being seen&lt;/li&gt;
&lt;li&gt;Support has been added for loading existing databanks of atomic species without specifying the species initially.&lt;/li&gt;
&lt;li&gt;A greater range of formats are now accepted as input to specify the species for which to calculate a spectrum.&lt;/li&gt;
&lt;li&gt;Documentation for atomic spectra and the Kurucz database has been updated further&lt;/li&gt;
&lt;/ul&gt;</description><category>radis</category><guid>http://openastronomy.org/Universe_OA/posts/2024/07/20240714_0000_code29563/</guid><pubDate>Sat, 13 Jul 2024 23:00:00 GMT</pubDate></item><item><title>Partition functions</title><link>http://openastronomy.org/Universe_OA/posts/2024/06/20240630_0000_code29563/</link><dc:creator>code29563</dc:creator><description>&lt;p&gt;Support has been added for the species-specific partition functions that are usually included along with the new linelists. In doing so, a new config parameter was added to allow the user to enable RADIS to automatically modify the local database files and update the config file accordingly.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;</description><category>radis</category><guid>http://openastronomy.org/Universe_OA/posts/2024/06/20240630_0000_code29563/</guid><pubDate>Sat, 29 Jun 2024 23:00:00 GMT</pubDate></item><item><title>Stark broadening and the Common API</title><link>http://openastronomy.org/Universe_OA/posts/2024/06/20240623_0000_code29563/</link><dc:creator>code29563</dc:creator><description>&lt;p&gt;Stark broadening for atomic lines has been implemented with different temperature scalings for neutral and ionised radiators.&lt;/p&gt;

&lt;p&gt;I integrated the API for atomic Kurucz linelists into the Common API, and in doing so the issue related to &lt;code class="language-plaintext highlighter-rouge"&gt;truncation&lt;/code&gt; and &lt;code class="language-plaintext highlighter-rouge"&gt;optimization&lt;/code&gt; seems to have been resolved.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;

&lt;p&gt;The main differentiating aspect so far in the Common API for Kurucz is that new versions of linelists and lab lines aren’t available for all species, the result being that the url from which to download the Kurucz linelist isn’t known with certainty before actually attempting to download it, so the possibilities are ranked and attempted in order of preference and the first to return a valid response is used.&lt;/p&gt;</description><category>radis</category><guid>http://openastronomy.org/Universe_OA/posts/2024/06/20240623_0000_code29563/</guid><pubDate>Sat, 22 Jun 2024 23:00:00 GMT</pubDate></item></channel></rss>